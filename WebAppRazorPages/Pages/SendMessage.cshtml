@page
@model Project.Pages.SendMessageModel
@{
}

<!-- Обновленная версия вашего кода -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SignalR Chat</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        /* Стили для сообщений чата */
        .message {
            margin-bottom: 10px;
            padding: 5px 10px;
            background-color: #f0f0f0;
            border-radius: 5px;
        }

            .message span {
                font-weight: bold;
                color: #333;
            }

            .message .time {
                color: #666;
            }
    </style>
</head>
<body>
    <!-- Остальной HTML код остается без изменений -->
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="mt-3">
                    <p>Пользователь: <strong>@Model.UserName</strong>!</p>
                    <input type="hidden" id="userName" value="@Model.UserName" />
                </div>
                <div id="inputForm" class="mt-3">
                    <div class="input-group">
                        <input type="text" id="message" class="form-control" placeholder="Введите сообщение...">
                        <div class="input-group-append">
                            <button type="submit" id="sendBtn" class="btn btn-primary">Отправить</button>
                        </div>
                    </div>
                </div>
                <div id="chatroom" class="mt-5">
                    <!-- Здесь будут отображаться сообщения чата -->
                </div>
            </div>
        </div>
    </div>

    <script src="~/js/signalr.min.js"></script>
    <script>
        const hubConnection = new signalR.HubConnectionBuilder()
            .withUrl("/chathub")
            .build();

        hubConnection.on("Send", function (message, user) {
            const userName = document.getElementById("userName").value;
            if (userName !== user) {
                let elem = document.createElement("div");
                elem.classList.add("message");
                let time = new Date().toLocaleTimeString();
                elem.innerHTML = `<span class="font-weight-bold">${user}: </span>${message}<span class="time">${time}</span>`;
                document.getElementById("chatroom").appendChild(elem);
            }
        });

        document.getElementById("sendBtn").addEventListener("click", function (e) {
            const userName = document.getElementById("userName").value;
            let message = document.getElementById("message").value.trim(); // Удаление начальных и конечных пробелов
            if (message !== "") {
                hubConnection.invoke("Send", message, userName);
                document.getElementById("message").value = "";
            } else {
                alert("Пожалуйста, введите сообщение перед отправкой.");
            }
        });

        hubConnection.start();
    </script>
</body>
</html>
